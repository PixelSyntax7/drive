// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DB_URL")
}

model User {
  id Int @id @default(autoincrement())

  email        String  @unique
  password     String?
  authProvider String?
  profilePic   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  folders Folder[]

  @@map("users")
}

model Folder {
  id Int @id @default(autoincrement())

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: NoAction)

  name   String
  isRoot Boolean @default(false)

  files    File[]
  children Hierarchy[] @relation("FolderAsParent")
  parent   Hierarchy?  @relation("FolderAsChild")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("folders")
}

model Hierarchy {
  id Int @id @default(autoincrement())

  folderId Int    @unique
  folder   Folder @relation("FolderAsChild", fields: [folderId], references: [id])

  parentId Int
  parent   Folder @relation("FolderAsParent", fields: [parentId], references: [id])

  @@map("hierarchy")
}

model File {
  id Int @id @default(autoincrement())

  folderId Int
  folder   Folder @relation(fields: [folderId], references: [id], onDelete: NoAction)

  name String
  size Int
  data Bytes

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, folderId])
  @@map("files")
}
